import User from"../../models/user.model.js";import Reagent from"../../models/reagents.model.js";export const getAllReagents=async(e,s)=>{try{const e=await Reagent.find();if(!e||0===e.length)return s.status(400).json({message:"There is no reagents here"});s.status(200).json({totalReagentsAdmin:e.length,allReagents:e})}catch(e){return s.status(500).json({error:e.message})}};export const getUserReagents=async(e,s)=>{try{const{userId:t}=e.params,a=await Reagent.find({createdBy:t});if(!a||0===a.length)return s.status(400).json({message:"There is no reagents for this user"});s.status(200).json({totalUserReagents:a.length,userReagents:a})}catch(e){return s.status(500).json({error:e.message})}};export const getUserReagent=async(e,s)=>{try{const{userId:t,casNumber:a}=e.params,r=await Reagent.find({createdBy:t,casNumber:a.trim()});if(!r||0===r.length)return s.status(400).json({message:"There is no reagents for this user"});s.status(200).json({totalUserReagents:r.length,userReagent:r})}catch(e){return s.status(500).json({error:e.message})}};export const createUserReagent=async(e,s)=>{try{const{userId:t}=e.params;if(!await User.findOne({_id:t,status:"user"}))return s.status(404).json({message:"User not found"});const{casNumber:a,...r}=e.body;if(!a)return s.status(400).json({message:"Missing required fields"});const n=await Reagent.create({...e.body,createdBy:t});if(!n)throw new Error("Error while creating user reagent");s.status(201).json({message:"Reagent created",reagent:n})}catch(e){return s.status(500).json({error:e.message})}};export const updateUserReagent=async(e,s)=>{try{const{userId:t,casNumber:a}=e.params,r=e.body,n=await Reagent.findOneAndUpdate({createdBy:t,casNumber:a.trim()},{$set:r},{new:!0,runValidators:!0});if(!n)return s.status(404).json({message:"Reagent not found"});s.status(200).json({message:"Reagent updated",updatedReagent:n})}catch(e){return s.status(500).json({error:e.message})}};export const deleteUserReagent=async(e,s)=>{try{const{userId:t,casNumber:a}=e.params,r=await Reagent.findOneAndDelete({createdBy:t,casNumber:a.trim()});if(!r)return s.status(404).json({message:"Reagent not found"});s.status(200).json({message:"Reagent deleted successfully",deletedReagent:r})}catch(e){return s.status(500).json({error:e.message})}};