import User from"../models/user.model.js";import{handleErrors}from"../mid-functions/error.handler.js";import createToken from"../mid-functions/creat.token.js";export const signUp=async(o,s)=>{const{email:e,password:r}=o.body;try{const o=await User.create({email:e,password:r});console.log("signupPost-controller (1):",o);const t=createToken(o._id);s.cookie("jwt",t,{httpOnly:!0,maxAge:864e5}),s.status(201).json({user:o})}catch(o){if(11e3===o.code)return console.log("error code captured",o.code),s.status(400).json({errors:{email:"That email is already used!"}});const t=handleErrors(o);console.log(t),s.status(400).json({errors:t}),console.log(e,r)}};export const login=async(o,s)=>{const{email:e,password:r}=o.body;console.log("console.log-loginPostController (1)",e,r);try{const o=await User.login(e,r);if(o){const e=createToken(o._id);return s.cookie("jwt",e,{httpOnly:!0,maxAge:864e5}),console.log("login token:",e),s.status(200).json({user:o,token:e,nonce:s.locals.nonce})}throw new Error("incorrect password")}catch(o){const e=handleErrors(o);if("incorrect email"===o.message)return s.status(400).json({errors:{email:e.email}});if("incorrect password"===o.message)return s.status(400).json({errors:{password:e.password}})}console.log(s.locals.user)};