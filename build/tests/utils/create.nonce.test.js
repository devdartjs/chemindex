import generateNonce from"../../utils/create-nonce.js";import crypto from"crypto";import{jest}from"@jest/globals";describe("generateNonce",()=>{const e=crypto.randomBytes;beforeEach(()=>{crypto.randomBytes=jest.fn()}),afterEach(()=>{crypto.randomBytes=e}),it("should return a base64-encoded string",()=>{const e=Buffer.from("1234567890abcdef");crypto.randomBytes.mockReturnValue(e);const t=generateNonce();expect(typeof t).toBe("string"),expect(t).toBe(e.toString("base64"))}),it("should return a string with 24 characters (base64 of 16 bytes)",()=>{crypto.randomBytes=e;const t=generateNonce();expect(t).toHaveLength(24)}),it("should generate different values on consecutive calls",()=>{crypto.randomBytes=e;const t=generateNonce(),o=generateNonce();expect(t).not.toBe(o)}),it("should call crypto.randomBytes with 16 as argument",()=>{crypto.randomBytes=jest.fn(()=>Buffer.from("1234567890abcdef")),generateNonce(),expect(crypto.randomBytes).toHaveBeenCalledWith(16)})});